version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gmao-postgres
    environment:
      POSTGRES_DB: gmao_db
      POSTGRES_USER: gmao_user
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - gmao-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: gmao-redis
    ports:
      - "6379:6379"
    networks:
      - gmao-network
    restart: unless-stopped

  # Backend API
  backend:
    build: .
    container_name: gmao-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://gmao_user:${DB_PASSWORD:-gmao_password_2024}@postgres:5432/gmao_db
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/usr/src/app/uploads
      - ./logs:/usr/src/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - gmao-network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: gmao-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - gmao-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  gmao-network:
    driver: bridge